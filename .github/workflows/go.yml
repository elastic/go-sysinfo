name: go

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.22.x

      - name: go.mod tidy
        run: go mod tidy && git diff --exit-code

      - name: license header
        run: go run github.com/elastic/go-licenser@v0.4.1 -d

      - name: cross-compile
        run: .ci/scripts/check-cross-compile.sh

  test:
    needs: check
    strategy:
      matrix:
        go:
          - 1.22.x
          - 1.21.x
        os:
          - macos-12
          - macos-13
          - macos-14
          - windows-2019
          - windows-2022
          - ubuntu-20.04
          - ubuntu-22.04
        cgo:
          - cgo
          - nocgo
        exclude:
          # Exclude cgo testing for platforms that don't use CGO.
          - {cgo: cgo, os: windows-2019}
          - {cgo: cgo, os: windows-2022}
          - {cgo: cgo, os: ubuntu-20.04}
          - {cgo: cgo, os: ubuntu-22.04}
          # Limit the OS variants tested with the earliest supported Go version (save resources).
          - {go: 1.21.x, os: macos-12}
          - {go: 1.21.x, os: macos-13}
          - {go: 1.21.x, os: windows-2019}
          - {go: 1.21.x, os: ubuntu-22.04}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        id: setup_go
        with:
          go-version: ${{ matrix.go }}

      - name: Set GO_VERSION
        run: echo "GO_VERSION=${{ steps.setup_go.outputs.go-version }}" >> $GITHUB_ENV

      - name: Set CGO_ENABLED=1
        if: matrix.cgo == 'cgo'
        run: echo "CGO_ENABLED=1" >> $GITHUB_ENV

      - name: Set CGO_ENABLED=0
        if: matrix.cgo == 'nocgo'
        run: echo "CGO_ENABLED=0" >> $GITHUB_ENV

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        if: github.event_name == 'pull_request'
        with:
          version: latest
          only-new-issues: true
          args: --timeout=5m
          # Don't cache or restore ~/go/pkg. It conflicts with caching from setup-go@v4.
          skip-pkg-cache: true

      - name: Test
        if: runner.os != 'Windows'
        run:  .ci/scripts/test.sh

      - name: Test
        if: runner.os == 'Windows'
        run:  .ci/scripts/test.bat

  test-freebsd:
    runs-on: ubuntu-latest
    env:
      # Only GITHUB_* are passed into the VM.
      GITHUB_GOLANG_VERSION: 1.22.2
    name: test (1.22.2, freebsd-14.0, cgo)
    steps:
      - uses: actions/checkout@v4

      - name: Test
        # TODO: Skip until freebsd provider is merged. Then this 'if' should be removed.
        if: ${{ hashFiles('providers/freebsd/') != '' }}
        id: test
        uses: vmactions/freebsd-vm@f8be330398166d1eb0601f01353839d4052367b2  #v1.0.7
        with:
          usesh: true
          prepare: |
            freebsd-version
            pwd
            ls -lah
            whoami

            pkg install -y curl
            curl -sL -o /usr/bin/gvm https://github.com/andrewkroh/gvm/releases/download/v0.5.2/gvm-freebsd-amd64
            chmod +x /usr/bin/gvm
            eval "$(gvm ${GITHUB_GOLANG_VERSION})"
            go version

          run: |
            eval "$(gvm ${GITHUB_GOLANG_VERSION})"
            go test -v ./...
