- name: setup - dump vars
  hosts: all
  tags: setup

  tasks:
    - name: Display all variables/facts known for a host
      debug:
        var: hostvars[inventory_hostname]

- name: setup - go
  hosts: all
  tags: setup

  roles:
    - gvm
    - golang

- name: tests - run tests
  hosts: unix
  tags: run_tests
  roles:
    - gvm
    - golang

  environment:
    GOPATH: "{{ ansible_user_dir }}/go"
    PATH: "{{ golang_goroot }}/bin:{{ ansible_env.GOPATH }}/bin:{{ ansible_env.PATH }}"

  tasks:
    - name: tests - fix gopath ownership
      file:
        path: '{{ ansible_user_dir }}/go'
        owner: '{{ ansible_user_id }}'
        group: '{{ ansible_user_gid }}'
        recurse: true
        state: directory
      become: true

    - name: tests - run tests
      shell: 'go test -v ./... 2>&1 > {{ ansible_distribution }}-{{ ansible_distribution_major_version}}.TEST.out'
      args:
        chdir: '{{ project_dir }}'
      register: go_test_cmd
      ignore_errors: yes

    - name: tests - save output to host
      fetch:
        src: '{{ project_dir }}/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.TEST.out'
        dest: '../{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.TEST.out'
        flat: yes

    - name: tests - delete output
      file:
        path: '{{ project_dir }}/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.TEST.out'
        state: absent

    - name: tests - assert
      assert:
        that: '{{ go_test_cmd | success }}'

- name: tests - run tests (windows)
  hosts: windows
  tags: run_tests
  roles:
    - gvm
    - golang

  vars:
    project_dir_win: '{{ ansible_user_dir }}\go\src\github.com\elastic\go-sysinfo'
    test_output_file: '{{ project_dir_win }}\{{ ansible_distribution | regex_replace(" ", "_") }}.TEST.out'

  tasks:
    - name: tests - run tests
      win_shell: 'go test -v ./... | Out-File -Encoding UTF8 {{ test_output_file }}'
      args:
        chdir: '{{ project_dir_win }}'
      register: go_test_cmd
      ignore_errors: yes

    - name: tests - save output to host
      fetch:
        src: '{{ test_output_file }}'
        dest: '../{{ ansible_distribution | regex_replace(" ", "_") }}.TEST.out'
        flat: yes

    - name: tests - delete output
      win_file:
        path: '{{ test_output_file }}'
        state: absent

    - name: tests - assert
      assert:
        that: '{{ go_test_cmd | success }}'
